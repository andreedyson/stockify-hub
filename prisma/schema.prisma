generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String    @id @default(cuid())
  fullname  String
  email     String    @unique
  password  String?
  image     String?
  role      userRole? @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  inventories   Inventory[]     @relation("UserInventories")
  UserInventory UserInventory[]
}

enum userRole {
  ADMIN
  USER
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String?
  price       Float
  stock       Int
  inventoryId String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Inventory   Inventory     @relation(fields: [inventoryId], references: [id])
  Transaction Transaction[]
}

model Inventory {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users         User[]          @relation("UserInventories")
  products      Product[]
  UserInventory UserInventory[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  productId  String
  quantity   Int
  totalPrice Float
  status     Status
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model UserInventory {
  userId      String
  inventoryId String
  assignedAt  DateTime @default(now())

  user      User      @relation(fields: [userId], references: [id])
  inventory Inventory @relation(fields: [inventoryId], references: [id])

  @@id([userId, inventoryId])
}
