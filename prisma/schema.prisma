// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String    @id @default(cuid())
  fullname  String
  email     String    @unique
  password  String?
  image     String?
  role      userRole? @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum userRole {
  ADMIN
  USER
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String?
  price       Float
  inventoryId String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Inventory   Inventory     @relation(fields: [inventoryId], references: [id])
  Transaction Transaction[]
}

model Inventory {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Transaction {
  id              Int             @id @default(autoincrement())
  productId       String
  quantity        Int
  totalPrice      Float
  transactionType TransactionType
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  product Product @relation(fields: [productId], references: [id])
}

enum TransactionType {
  SALE
  PURCHASE
  RETURN
}
